---
// layout import
import Layout from "@layouts/Layout.astro";

// library import
import { getCollection } from "astro:content";

// component import
import { Image } from "astro:assets";
import ProgrammingProjectCard from "@components/AstroComponents/ProgrammingProjects/ProgrammingProjectCard.astro";
import Header from "@components/AstroIslands/Common/Header";
import Pagination from "@components/AstroComponents/Common/Pagination.astro";
import Socials from "@components/AstroComponents/Socials.astro";
import Footer from "@components/AstroComponents/Footer.astro";
import Button from "@components/AstroComponents/Common/Button.astro";

// function import
import { formatPosts } from "@js/utils";

// type import
import type { GetStaticPaths } from "astro";

// style import
import "@styles/posts.scss";

// asset import
import NoData from "@images/No data.svg";

// getting all publications with 6 publications per page
export const getStaticPaths = (async ({ paginate }) => {
  const allProgrammingProjects = await getCollection("programming");
  const formattedProgrammingProjects = formatPosts(allProgrammingProjects, {
    filterOutFuturePosts: false
  });
  return paginate(formattedProgrammingProjects, {
    pageSize: 6,
  });
}) satisfies GetStaticPaths;
interface Props {
  frontmatter?: any; 
  cover?: string;
  robots?: string;
  page: any;
}
const { page, frontmatter, cover, robots }: Props = Astro.props;

// defining page title and description for all publications page
const pageTitle = "Aritra Roy | All Programming Projects";
const pageDescription =
  "Delve into my extensive collection of programming projects related to research, computational materials science, machine learning, and data science.";
---

<Layout title={pageTitle} description={pageDescription} {frontmatter} {robots} {cover}>
  <Header isHomePage={false} client:only="react" />
  <Socials />
  <div class="postsNavigationDiv">
    <Button text="Projects Homepage" href="/projects/programming" customStyle="margin-bottom:20px;" />
    <!-- publications  heading section -->
    <h1 style="margin-bottom: 0;">All Programming Projects</h1>
    <!-- all publications -->
    <div class="allPostsContainer">
      {
        page.data.length > 0 ? (
          page.data.map((publication: any) => (
            <ProgrammingProjectCard
              url={publication.slug}
              title={publication.data.title}
              cover={publication.data.cover}
              duration={publication.data.duration}
              status={publication.data.status}
              tags={publication.data.tags}
              githubUrl={publication.data.githubUrl}
              hostedUrl={publication.data.hostedUrl}
              urlPrefix="/projects/programming/"
              buttonText="View Project"
            />
          ))
        ) : (
          <div class="noDataFoundContainer">
            <Image
              id="noDataFound"
              src={NoData}
              alt="No Data Found"
              width={500}
            />
            <h2>No Records Found</h2>
            <p>
              There is no project in this section at this moment.. Maybe explore other projects?
            </p>
          </div>
        )
      }
    </div>
    <!-- pagination section -->
    {page.lastPage === 1 ? (<></>) : 
      (
        <Pagination
          prevUrl={page.url.prev}
          nextUrl={page.url.next}
          totalPage={page.lastPage}
          currentPage={page.currentPage}
          urlPrefix="/projects/programming/all-projects/"
        />
      )
    }
  </div>
  <Footer />
</Layout>
