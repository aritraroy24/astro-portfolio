---
// layout import
import Layout from "@layouts/Layout.astro";

// library import
import { getCollection } from "astro:content";

// component import
import { Image } from "astro:assets";
import PostCard from "@components/AstroComponents/Common/PostCard.astro";
import Pagination from "@components/AstroComponents/Common/Pagination.astro";
import Header from "@components/AstroIslands/Common/Header";
import BackButton from "@components/AstroComponents/Common/BackButton.astro";
import Socials from "@components/AstroComponents/Socials.astro";
import Footer from "@components/AstroComponents/Footer.astro";

// style import
import "@styles/posts.scss";

// asset import
import NoData from "@images/No data.svg"

// function import
import { slugify, deslugify, formatPosts } from "@js/utils";

// type import
import type { GetStaticPaths } from "astro";

// getting all blog posts with a specified tag (6 posts per page)
export const getStaticPaths = (async ({ paginate }) => {
  const allBlogs = await getCollection("blogs");
  const formattedBlogs = formatPosts(allBlogs);
  const uniqueTags = [
    ...new Set(formattedBlogs.map((blog: any) => blog.data.tags).flat()),
  ];

  return uniqueTags.flatMap((tag: any) => {
    const filteredPosts = formattedBlogs.filter((blog: any) =>
      blog.data.tags.includes(tag)
    );
    return paginate(filteredPosts, {
      params: { tag: slugify(tag) },
      pageSize: 6,
    });
  });
}) satisfies GetStaticPaths;
const params = Astro.params;
const { page } = Astro.props;

const tag = params.tag ? deslugify(params.tag).toUpperCase() : "";
const {
  pageTitle = `All Blogs | Tag: ${tag}`, 
  pageDescription = `Discover the essence of ${tag} through captivating articles, insights, and expertise. Explore a curated collection of ${tag} content, tailored just for you.`, 
  frontmatter, 
  cover, 
  robots
} = Astro.props;
---

<Layout title={pageTitle} description={pageDescription} {frontmatter} {robots} {cover}>
  <Header isHomePage={false} client:only="react" />
  <Socials />
  <div class="postsNavigationDiv">
    <!-- blogs with specific tag heading section -->
    <h1>
      Blogs about <span class="highlightedText">{tag}</span>
    </h1>
    <BackButton
      text="Back"
      customStyle="padding: 10px 18px;"
      icon={{
        name: "others/arrow-big-left-line",
        side: "left",
      }}
    />
    <!-- all blogs with one specific tag -->
    <div class="allPostsContainer">
      {
        page.data.length > 0 ? (
          page.data.map((blog: any) => (
            <PostCard
              url={blog.slug}
              title={blog.data.title}
              image={blog.data.cover}
              pubDate={blog.data.pubDate}
              duration={blog.data.duration}
              tags={blog.data.tags}
              urlPrefix="/tutorial/blogs/"
              buttonText="View Post"
            />
          ))
        ):(
          <div class="noDataFoundContainer">
            <Image
              id="noDataFound"
              src={NoData}
              alt="No Data Found"
              width={500}
            />
            <h2>No Records Found</h2>
            <p>
              There is no blog in this section at this moment.. Maybe explore other projects?
            </p>
          </div>
        )
      }
    </div>
    <!-- pagination section -->
    {page.lastPage === 1 ? (<></>) : (
      <Pagination
        prevUrl={page.url.prev}
        nextUrl={page.url.next}
        totalPage={page.lastPage}
        currentPage={page.currentPage}
        urlPrefix={`/tutorial/blogs/tag/${params.tag}/`}
      />
    )}
  </div>
  <Footer />
</Layout>
