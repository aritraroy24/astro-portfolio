---
// layout import
import Layout from "@layouts/Layout.astro";

// library import
import { getCollection } from "astro:content";

// component import
import { Image } from "astro:assets";
import PostCard from "@components/AstroComponents/Common/PostCard.astro";
import Header from "@components/AstroIslands/Common/Header";
import Pagination from "@components/AstroComponents/Common/Pagination.astro";
import Footer from "@components/AstroComponents/Footer.astro";
import Socials from "@components/AstroComponents/Socials.astro";

// function import
import { formatPosts } from "@js/utils";

// type import
import type { GetStaticPaths } from "astro";

// style import
import "@styles/posts.scss";

// asset import
import NoData from "@images/No data.svg"

// getting all blogs with 6 blogs per page
export const getStaticPaths = (async ({ paginate }) => {
  const allBlogs = await getCollection("blogs");
  const formattedBlogs = formatPosts(allBlogs);
  return paginate(formattedBlogs, {
    pageSize: 6,
  });
}) satisfies GetStaticPaths;
interface Props {
  pageTitle?: string;
  pageDescription?: string;
  frontmatter?: any; 
  cover?: string;
  robots?: string;
  page: any;
}
const { page }: Props = Astro.props;

// defining page title and description for all blogs page
const {
  pageTitle = "Aritra Roy | All Blog Posts", 
  pageDescription =
  "Discover insightful blogs on computational chemistry, materials science, programming, and more. Explore my extensive collection for the latest insights and discoveries.",
  frontmatter, 
  cover,
  robots
  }: Props = Astro.props;
---

<Layout title={pageTitle} description={pageDescription} {frontmatter} {robots} {cover}>
  <Header isHomePage={false} client:only="react" />
  <Socials />
  <div class="postsNavigationDiv">
    <!-- blogs  heading section -->
    <h1 style="margin-bottom: 0;">All Blogs</h1>
    <!-- all blogs -->
    <div class="allPostsContainer">
      {
        page.data.length > 0 ? (
          page.data.map((blog: any) => (
            <PostCard
              url={blog.slug}
              title={blog.data.title}
              image={blog.data.cover}
              pubDate={blog.data.pubDate}
              duration={blog.data.duration}
              tags={blog.data.tags}
              urlPrefix="/tutorial/blogs/"
              buttonText="Read Post"
            />
          ))
        ):(
          <div class="noDataFoundContainer">
            <Image
              id="noDataFound"
              src={NoData}
              alt="No Data Found"
              width={500}
            />
            <h2>No Records Found</h2>
            <p>
              There is no blog in this section at this moment.. Maybe explore other projects?
            </p>
          </div>
        )
      }
    </div>
    <!-- pagination section -->
    {page.lastPage === 1 ? (<></>) : (
      <Pagination
        prevUrl={page.url.prev}
        nextUrl={page.url.next}
        totalPage={page.lastPage}
        currentPage={page.currentPage}
        urlPrefix="/tutorial/blogs/"
      />
    )}
  </div>
  <Footer />
</Layout>
