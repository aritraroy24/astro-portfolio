---
// layout import
import Layout from "@layouts/Layout.astro";

// component import
import BlogHeader from "@components/AstroComponents/Blogs/BlogHeader.astro";
import RelatedPosts from "@components/AstroComponents/Common/RelatedPosts.astro";
import ShareComment from "@components/AstroIslands/Common/ShareComment";
import Socials from "@components/AstroComponents/Socials.astro";
import Footer from "@components/AstroComponents/Footer.astro";

// function import
import { formatPosts } from "@js/utils";
import { getCollection } from "astro:content";

// style import
import "@styles/single-post.scss";

// destructuring astro properties
const { frontmatter } = Astro.props;
const { title, subtitle, description, pubDate, tags, duration, cover } =
  frontmatter;

// getting related blog posts related to first tag of the current blog
const allBlogs = await getCollection("blogs");
const formattedBlogs = formatPosts(allBlogs, {
  sortByDate: false,
});
// filtering based on common tags
const tagsFilteredBlogs: any[] = [];
var flag = 0;
formattedBlogs.forEach((item: any) => {
  var tempTags = item.data.tags;
  tempTags.forEach((tag: string) => {
    if (tags.includes(tag)) {
      flag = 1;
    }
  });
  if (flag === 1) {
    tagsFilteredBlogs.push(item);
  }
  flag = 0;
});
// removing the same post itself (we don't want to show the same post as similar post suggestion)
const relatedBlogs = tagsFilteredBlogs
  .filter((blog: any) => blog.data.title !== title)
  .slice(0, 3);
---

<Layout {title} {description}>
  <Socials />
  <!-- blog heading section -->
  <BlogHeader
    {title}
    {subtitle}
    {description}
    {pubDate}
    {tags}
    {cover}
    {duration}
  />
  <!-- blog post content section -->
  <div class="post-content">
    <div class="content">
      <slot />
    </div>
    <div class="sidebar"></div>
  </div>
  <!-- comment using giscus -->
  <ShareComment
    client:only="react"
    postType="Blog Post"
    rssUrl="/tutorial/blogs/rss.xml"
  />
  <!-- related blog posts section -->
  <RelatedPosts
    relatedPosts={relatedBlogs}
    text="Blogs"
    urlPrefix="/tutorial/blogs/"
  />
  <Footer />
</Layout>
